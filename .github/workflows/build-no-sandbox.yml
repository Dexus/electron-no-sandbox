name: Build Electron without V8 Sandbox (modern)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ELECTRON_SKIP_NODE_DOWNLOAD: 0

    steps:
      - name: Checkout Electron
        uses: actions/checkout@v4
        with:
          repository: electron/electron
          ref: 34-x-y  # oder z.â€¯B. v27.3.0
          path: electron

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang python3 curl git nodejs npm libgtk-3-dev libnss3-dev libxss-dev libasound2-dev libx11-dev libx11-xcb-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxi-dev libxtst-dev libxrandr-dev libxinerama-dev libxext-dev libglib2.0-dev libpci-dev libdbus-1-dev libxt-dev

      - name: Install depot_tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "${GITHUB_WORKSPACE}/depot_tools" >> $GITHUB_PATH

      - name: Install e (Electron CLI)
        run: |
          npm install -g @electron/packager
          npm install -g @electron/electron

      - name: Sync Electron dependencies
        working-directory: electron
        run: |
          npm install
          npx e sync

      - name: Configure GN build with v8 sandbox disabled
        working-directory: electron
        run: |
          npx e gn -- out/Release --args='import("//electron/build/args/release.gn") v8_enable_sandbox=false is_debug=false'

      - name: Build Electron
        working-directory: electron
        run: |
          npx e build -- out/Release electron

      - name: Package Electron binary
        working-directory: electron
        run: |
          mkdir -p ../electron-artifacts
          cp out/Release/electron ../electron-artifacts/electron

      - name: Upload Electron binary
        uses: actions/upload-artifact@v4
        with:
          name: electron-binary
          path: electron-artifacts/electron
